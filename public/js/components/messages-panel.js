// admin-dashboard/components/messages.js
// –û–ø–∏—Å–∞–Ω–∏–µ: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –º–µ–∂–¥—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏
// –õ–æ–≥–∏–∫–∞: –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è
// –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: HTMLElement, fetch API
// –ü—Ä–∏–º–µ—á–∞–Ω–∏—è: –†–µ–∞–ª–∏–∑—É–µ—Ç –æ–±–º–µ–Ω —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É –∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏

class MessagesPanel extends HTMLElement {
    constructor() {
        super();
        this.messages = [];
        this.currentUser = {
            id: 'alex',
            name: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤',
            role: 'director',
            specialization: ['management']
        };
        this.filters = {
            type: 'all',
            priority: 'all',
            specialization: 'all',
            search: ''
        };
        this.specializations = ['frontend', 'backend', 'design', 'devops', 'analytics', 'management'];
    }

    connectedCallback() {
        this.render();
        this.loadMessages();
    }

    render() {
        this.innerHTML = `
            <div class="card">
                <div class="messages-header">
                    <h2>üí¨ –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è</h2>
                    <button class="btn btn-primary" id="new-message-btn">
                        ‚úâÔ∏è –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    </button>
                </div>
                <p>–û–±—â–µ–Ω–∏–µ –º–µ–∂–¥—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ —Å–∏—Å—Ç–µ–º—ã</p>

                <div class="messages-controls">
                    <div class="filters-grid">
                        <div class="form-group">
                            <label>–¢–∏–ø:</label>
                            <select class="form-control" id="type-filter">
                                <option value="all">–í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è</option>
                                <option value="incoming">–í—Ö–æ–¥—è—â–∏–µ</option>
                                <option value="outgoing">–ò—Å—Ö–æ–¥—è—â–∏–µ</option>
                                <option value="unread">–ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</label>
                            <select class="form-control" id="priority-filter">
                                <option value="all">–í—Å–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã</option>
                                <option value="urgent">–°—Ä–æ—á–Ω—ã–π</option>
                                <option value="high">–í—ã—Å–æ–∫–∏–π</option>
                                <option value="normal">–û–±—ã—á–Ω—ã–π</option>
                                <option value="low">–ù–∏–∑–∫–∏–π</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label>–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:</label>
                            <select class="form-control" id="specialization-filter">
                                <option value="all">–í—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è</option>
                                ${this.specializations.map(spec => 
                                    `<option value="${spec}">${this.getSpecializationLabel(spec)}</option>`
                                ).join('')}
                            </select>
                        </div>
                    </div>
                    <div class="search-box">
                        <input type="text" id="search-messages" class="form-control" placeholder="üîç –ü–æ–∏—Å–∫ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º...">
                    </div>
                </div>

                <div class="messages-stats">
                    <div class="stat-card">
                        <span class="stat-number">${this.getStats().total}</span>
                        <span class="stat-label">–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π</span>
                    </div>
                    <div class="stat-card">
                        <span class="stat-number">${this.getStats().unread}</span>
                        <span class="stat-label">–ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ</span>
                    </div>
                    <div class="stat-card">
                        <span class="stat-number">${this.getStats().highPriority}</span>
                        <span class="stat-label">–í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç</span>
                    </div>
                    <div class="stat-card">
                        <span class="stat-number">${this.getStats().toMe}</span>
                        <span class="stat-label">–ê–¥—Ä–µ—Å–æ–≤–∞–Ω—ã –º–Ω–µ</span>
                    </div>
                </div>

                <div class="messages-container">
                    <div id="messages-list" class="messages-list">
                        <div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π...</div>
                    </div>
                </div>
            </div>

            <!-- New Message Modal -->
            <div id="new-message-modal" class="modal" style="display: none;">
                <div class="modal-content large">
                    <div class="modal-header">
                        <h3>‚úâÔ∏è –ù–æ–≤–æ–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</h3>
                        <button class="close-modal">&times;</button>
                    </div>
                    <div class="modal-body">
                        <form id="new-message-form">
                            <div class="form-grid">
                                <div class="form-group">
                                    <label>–ö–æ–º—É (—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è):</label>
                                    <select class="form-control" name="toSpecialization" required>
                                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é</option>
                                        ${this.specializations.map(spec =>
                                            `<option value="${spec}">${this.getSpecializationLabel(spec)}</option>`
                                        ).join('')}
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</label>
                                    <select class="form-control" name="priority" required>
                                        <option value="normal">–û–±—ã—á–Ω—ã–π</option>
                                        <option value="high">–í—ã—Å–æ–∫–∏–π</option>
                                        <option value="urgent">–°—Ä–æ—á–Ω—ã–π</option>
                                        <option value="low">–ù–∏–∑–∫–∏–π</option>
                                    </select>
                                </div>
                                <div class="form-group full-width">
                                    <label>–¢–µ–º–∞:</label>
                                    <input type="text" class="form-control" name="subject" required>
                                </div>
                                <div class="form-group full-width">
                                    <label>–°–æ–æ–±—â–µ–Ω–∏–µ:</label>
                                    <textarea class="form-control" name="message" rows="5" required></textarea>
                                </div>
                                <div class="form-actions">
                                    <button type="button" class="btn btn-secondary close-modal">–û—Ç–º–µ–Ω–∞</button>
                                    <button type="submit" class="btn btn-primary">–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        `;

        this.setupEventListeners();
    }

    setupEventListeners() {
        // –§–∏–ª—å—Ç—Ä—ã
        document.getElementById('type-filter').addEventListener('change', (e) => {
            this.filters.type = e.target.value;
            this.renderMessages();
        });

        document.getElementById('priority-filter').addEventListener('change', (e) => {
            this.filters.priority = e.target.value;
            this.renderMessages();
        });

        document.getElementById('specialization-filter').addEventListener('change', (e) => {
            this.filters.specialization = e.target.value;
            this.renderMessages();
        });

        document.getElementById('search-messages').addEventListener('input', (e) => {
            this.filters.search = e.target.value.toLowerCase();
            this.renderMessages();
        });

        // –ö–Ω–æ–ø–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        document.getElementById('new-message-btn').addEventListener('click', () => {
            document.getElementById('new-message-modal').style.display = 'block';
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        document.querySelectorAll('.close-modal').forEach(btn => {
            btn.addEventListener('click', () => {
                document.getElementById('new-message-modal').style.display = 'none';
            });
        });

        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
        document.getElementById('new-message-form').addEventListener('submit', (e) => {
            e.preventDefault();
            this.sendMessage(new FormData(e.target));
        });
    }

    async loadMessages() {
        try {
            // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∑–∞–ø—Ä–æ—Å –∫ API
            // const response = await fetch('/api/messages');
            // this.messages = await response.json();
            
            // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            this.messages = [
                {
                    id: 1,
                    from: { id: 'anna', name: '–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞' },
                    to: { type: 'specialization', value: 'management' },
                    subject: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
                    message: '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª–∏ –¥–ª—è –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤.',
                    timestamp: new Date(Date.now() - 3600000).toISOString(),
                    read: false,
                    priority: 'high',
                    specialization: 'security'
                },
                {
                    id: 2,
                    from: { id: 'alex', name: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤' },
                    to: { type: 'specialization', value: 'frontend' },
                    subject: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞',
                    message: '–ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –Ω–æ–≤—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º.',
                    timestamp: new Date(Date.now() - 7200000).toISOString(),
                    read: true,
                    priority: 'normal',
                    specialization: 'frontend'
                },
                {
                    id: 3,
                    from: { id: 'ivan', name: '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤' },
                    to: { type: 'specialization', value: 'backend' },
                    subject: '–ü—Ä–æ–±–ª–µ–º–∞ —Å API',
                    message: '–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —É—Ç–µ—á–∫–∞ –ø–∞–º—è—Ç–∏ –≤ API. –¢—Ä–µ–±—É–µ—Ç—Å—è —Å—Ä–æ—á–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.',
                    timestamp: new Date(Date.now() - 10800000).toISOString(),
                    read: false,
                    priority: 'urgent',
                    specialization: 'backend'
                }
            ];
            
            this.renderMessages();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
            this.showError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è');
        }
    }

    renderMessages() {
        const messagesList = document.getElementById('messages-list');
        if (!messagesList) return;

        const filtered = this.messages.filter(msg => {
            // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–∏–ø—É
            if (this.filters.type === 'incoming' && msg.to.id !== this.currentUser.id) return false;
            if (this.filters.type === 'outgoing' && msg.from.id !== this.currentUser.id) return false;
            if (this.filters.type === 'unread' && msg.read) return false;
            
            // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
            if (this.filters.priority !== 'all' && msg.priority !== this.filters.priority) return false;
            
            // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
            if (this.filters.specialization !== 'all' && msg.specialization !== this.filters.specialization) return false;
            
            // –ü–æ–∏—Å–∫
            if (this.filters.search) {
                const search = this.filters.search.toLowerCase();
                return (
                    msg.subject.toLowerCase().includes(search) ||
                    msg.message.toLowerCase().includes(search) ||
                    msg.from.name.toLowerCase().includes(search)
                );
            }
            
            return true;
        });

        if (filtered.length === 0) {
            messagesList.innerHTML = '<div class="no-messages">–°–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
            return;
        }

        messagesList.innerHTML = filtered.map(msg => `
            <div class="message-item ${msg.read ? '' : 'unread'}" data-id="${msg.id}">
                <div class="message-priority ${msg.priority}"></div>
                <div class="message-content">
                    <div class="message-header">
                        <span class="message-sender">${msg.from.name}</span>
                        <span class="message-time">${new Date(msg.timestamp).toLocaleString()}</span>
                    </div>
                    <div class="message-subject">${msg.subject}</div>
                    <div class="message-preview">${msg.message.substring(0, 100)}...</div>
                    <div class="message-tags">
                        <span class="tag ${msg.priority}">${this.getPriorityLabel(msg.priority)}</span>
                        <span class="tag ${msg.specialization}">${this.getSpecializationLabel(msg.specialization)}</span>
                    </div>
                </div>
            </div>
        `).join('');
    }

    async sendMessage(formData) {
        try {
            // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∑–∞–ø—Ä–æ—Å –∫ API
            // const response = await fetch('/api/messages', {
            //     method: 'POST',
            //     body: formData
            // });
            // const result = await response.json();
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞
            const newMessage = {
                id: Date.now(),
                from: this.currentUser,
                to: { type: 'specialization', value: formData.get('toSpecialization') },
                subject: formData.get('subject'),
                message: formData.get('message'),
                timestamp: new Date().toISOString(),
                read: true,
                priority: formData.get('priority'),
                specialization: formData.get('toSpecialization')
            };
            
            this.messages.unshift(newMessage);
            this.renderMessages();
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
            document.getElementById('new-message-modal').style.display = 'none';
            document.getElementById('new-message-form').reset();
            
            this.showSuccess('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
            this.showError('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ');
        }
    }

    getStats() {
        return {
            total: this.messages.length,
            unread: this.messages.filter(msg => !msg.read).length,
            highPriority: this.messages.filter(msg => msg.priority === 'high' || msg.priority === 'urgent').length,
            toMe: this.messages.filter(msg => msg.to.id === this.currentUser.id).length
        };
    }

    getPriorityLabel(priority) {
        const labels = {
            'urgent': '–°—Ä–æ—á–Ω–æ',
            'high': '–í—ã—Å–æ–∫–∏–π',
            'normal': '–û–±—ã—á–Ω—ã–π',
            'low': '–ù–∏–∑–∫–∏–π'
        };
        return labels[priority] || priority;
    }

    getSpecializationLabel(specialization) {
        const labels = {
            'frontend': '–§—Ä–æ–Ω—Ç–µ–Ω–¥',
            'backend': '–ë—ç–∫–µ–Ω–¥',
            'design': '–î–∏–∑–∞–π–Ω',
            'devops': 'DevOps',
            'analytics': '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
            'management': '–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç',
            'security': '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å'
        };
        return labels[specialization] || specialization;
    }

    showError(message) {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–æ –±—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
        console.error(message);
        alert(`–û—à–∏–±–∫–∞: ${message}`);
    }

    showSuccess(message) {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–æ –±—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ
        console.log(message);
        alert(`–£—Å–ø–µ—Ö: ${message}`);
    }
}

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
if (!customElements.get('messages-panel')) {
    customElements.define('messages-panel', MessagesPanel);
}
