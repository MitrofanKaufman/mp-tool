From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Admin Messaging System <admin@example.com>
Date: Fri, 12 Jan 2024 12:00:00 +0300
Subject: [PATCH 06/10] Add messaging components for ideas, tickets and internal messages

Create React-like components for:
- Ideas management with voting and filtering
- Tickets system with categories and assignments
- Internal messaging with role-based access
- Real-time updates and search

---
 admin-dashboard/components/ideas.js      | 350 +++++++++++++++++++++++
 admin-dashboard/components/tickets.js    | 450 +++++++++++++++++++++++++++++++
 admin-dashboard/components/messages.js   | 400 ++++++++++++++++++++++++++
 admin-dashboard/style.css                | 248 +++++++++++++++++-
 4 files changed, 1447 insertions(+), 1 deletion(-)
 create mode 100644 admin-dashboard/components/ideas.js
 create mode 100644 admin-dashboard/components/tickets.js
 create mode 100644 admin-dashboard/components/messages.js

diff --git a/admin-dashboard/components/ideas.js b/admin-dashboard/components/ideas.js
new file mode 100644
index 0000000..1234567
--- /dev/null
+++ b/admin-dashboard/components/ideas.js
@@ -0,0 +1,350 @@
+class IdeasPanel extends HTMLElement {
+    constructor() {
+        super();
+        this.ideas = [];
+        this.filters = {
+            status: 'all',
+            priority: 'all',
+            category: 'all',
+            search: ''
+        };
+        this.sortBy = 'created-desc';
+    }
+
+    connectedCallback() {
+        this.render();
+        this.loadIdeas();
+    }
+
+    render() {
+        this.innerHTML = `
+            <div class="card">
+                <div class="ideas-header">
+                    <h2>üí° –°–∏—Å—Ç–µ–º–∞ –∏–¥–µ–π</h2>
+                    <button class="btn btn-primary" id="new-idea-btn">
+                        ‚ûï –ù–æ–≤–∞—è –∏–¥–µ—è
+                    </button>
+                </div>
+                <p>–ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –∏ –æ–±—Å—É–∂–¥–∞–π—Ç–µ —É–ª—É—á—à–µ–Ω–∏—è –¥–ª—è —Å–∏—Å—Ç–µ–º—ã</p>
+
+                <div class="ideas-controls">
+                    <div class="filters-grid">
+                        <div class="form-group">
+                            <label>–°—Ç–∞—Ç—É—Å:</label>
+                            <select class="form-control" id="status-filter">
+                                <option value="all">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
+                                <option value="new">–ù–æ–≤—ã–µ</option>
+                                <option value="in-progress">–í —Ä–∞–±–æ—Ç–µ</option>
+                                <option value="completed">–ó–∞–≤–µ—Ä—à–µ–Ω—ã</option>
+                                <option value="rejected">–û—Ç–∫–ª–æ–Ω–µ–Ω—ã</option>
+                            </select>
+                        </div>
+                        <div class="form-group">
+                            <label>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</label>
+                            <select class="form-control" id="priority-filter">
+                                <option value="all">–í—Å–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã</option>
+                                <option value="critical">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π</option>
+                                <option value="high">–í—ã—Å–æ–∫–∏–π</option>
+                                <option value="medium">–°—Ä–µ–¥–Ω–∏–π</option>
+                                <option value="low">–ù–∏–∑–∫–∏–π</option>
+                            </select>
+                        </div>
+                        <div class="form-group">
+                            <label>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</label>
+                            <select class="form-control" id="category-filter">
+                                <option value="all">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
+                                <option value="feature">–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª</option>
+                                <option value="improvement">–£–ª—É—á—à–µ–Ω–∏–µ</option>
+                                <option value="bugfix">–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</option>
+                                <option value="ui-ux">UI/UX</option>
+                                <option value="performance">–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</option>
+                            </select>
+                        </div>
+                        <div class="form-group">
+                            <label>–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞:</label>
+                            <select class="form-control" id="sort-by">
+                                <option value="created-desc">–ù–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞</option>
+                                <option value="created-asc">–°—Ç–∞—Ä—ã–µ —Å–Ω–∞—á–∞–ª–∞</option>
+                                <option value="priority-desc">–ü–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É</option>
+                                <option value="votes-desc">–ü–æ –≥–æ–ª–æ—Å–∞–º</option>
+                            </select>
+                        </div>
+                    </div>
+                    <div class="search-box">
+                        <input type="text" id="search-ideas" class="form-control" placeholder="üîç –ü–æ–∏—Å–∫ –ø–æ –∏–¥–µ—è–º...">
+                    </div>
+                </div>
+
+                <div class="ideas-stats">
+                    <div class="stat-card">
+                        <span class="stat-number">${this.getStats().total}</span>
+                        <span class="stat-label">–í—Å–µ–≥–æ –∏–¥–µ–π</span>
+                    </div>
+                    <div class="stat-card">
+                        <span class="stat-number">${this.getStats().inProgress}</span>
+                        <span class="stat-label">–í —Ä–∞–±–æ—Ç–µ</span>
+                    </div>
+                    <div class="stat-card">
+                        <span class="stat-number">${this.getStats().completed}</span>
+                        <span class="stat-label">–ó–∞–≤–µ—Ä—à–µ–Ω–æ</span>
+                    </div>
+                    <div class="stat-card">
+                        <span class="stat-number">${this.getStats().highPriority}</span>
+                        <span class="stat-label">–í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç</span>
+                    </div>
+                </div>
+
+                <div id="ideas-list" class="ideas-list">
+                    <div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –∏–¥–µ–π...</div>
+                </div>
+            </div>
+
+            <!-- Modal for new idea -->
+            <div id="new-idea-modal" class="modal" style="display: none;">
+                <div class="modal-content">
+                    <div class="modal-header">
+                        <h3>üí° –ù–æ–≤–∞—è –∏–¥–µ—è</h3>
+                        <button class="close-modal">&times;</button>
+                    </div>
+                    <div class="modal-body">
+                        <form id="new-idea-form">
+                            <div class="form-group">
+                                <label>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</label>
+                                <input type="text" class="form-control" name="title" required 
+                                       placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–¥–µ–∏">
+                            </div>
+                            <div class="form-group">
+                                <label>–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:</label>
+                                <textarea class="form-control" name="description" rows="4" 
+                                          placeholder="–û–ø–∏—à–∏—Ç–µ –∏–¥–µ—é –ø–æ–¥—Ä–æ–±–Ω–æ..."></textarea>
+                            </div>
+                            <div class="form-grid">
+                                <div class="form-group">
+                                    <label>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</label>
+                                    <select class="form-control" name="category" required>
+                                        <option value="feature">–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª</option>
+                                        <option value="improvement">–£–ª—É—á—à–µ–Ω–∏–µ</option>
+                                        <option value="bugfix">–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</option>
+                                        <option value="ui-ux">UI/UX</option>
+                                        <option value="performance">–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</option>
+                                    </select>
+                                </div>
+                                <div class="form-group">
+                                    <label>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</label>
+                                    <select class="form-control" name="priority" required>
+                                        <option value="low">–ù–∏–∑–∫–∏–π</option>
+                                        <option value="medium">–°—Ä–µ–¥–Ω–∏–π</option>
+                                        <option value="high">–í—ã—Å–æ–∫–∏–π</option>
+                                        <option value="critical">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π</option>
+                                    </select>
+                                </div>
+                            </div>
+                            <div class="form-group">
+                                <label>–¢–µ–≥–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):</label>
+                                <input type="text" class="form-control" name="tags" 
+                                       placeholder="frontend, backend, ui, ...">
+                            </div>
+                            <div class="form-group">
+                                <label>–û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ (—á–∞—Å—ã):</label>
+                                <input type="number" class="form-control" name="estimatedHours" 
+                                       min="1" max="200" value="8">
+                            </div>
+                        </form>
+                    </div>
+                    <div class="modal-footer">
+                        <button class="btn btn-secondary" id="cancel-idea">–û—Ç–º–µ–Ω–∞</button>
+                        <button class="btn btn-primary" id="submit-idea">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–¥–µ—é</button>
+                    </div>
+                </div>
+            </div>
+        `;
+
+        this.setupEventListeners();
+    }
+
+    setupEventListeners() {
+        // Filters
+        this.querySelector('#status-filter').addEventListener('change', (e) => {
+            this.filters.status = e.target.value;
+            this.renderIdeas();
+        });
+        
+        this.querySelector('#priority-filter').addEventListener('change', (e) => {
+            this.filters.priority = e.target.value;
+            this.renderIdeas();
+        });
+        
+        this.querySelector('#category-filter').addEventListener('change', (e) => {
+            this.filters.category = e.target.value;
+            this.renderIdeas();
+        });
+        
+        this.querySelector('#sort-by').addEventListener('change', (e) => {
+            this.sortBy = e.target.value;
+            this.renderIdeas();
+        });
+        
+        this.querySelector('#search-ideas').addEventListener('input', (e) => {
+            this.filters.search = e.target.value;
+            this.renderIdeas();
+        });
+
+        // New idea modal
+        this.querySelector('#new-idea-btn').addEventListener('click', () => this.showNewIdeaModal());
+        this.querySelector('.close-modal').addEventListener('click', () => this.hideModal());
+        this.querySelector('#cancel-idea').addEventListener('click', () => this.hideModal());
+        this.querySelector('#submit-idea').addEventListener('click', () => this.submitIdea());
+    }
+
+    async loadIdeas() {
+        try {
+            const response = await fetch(`${window.adminDashboard.apiBase}/admin/ideas`);
+            const data = await response.json();
+            this.ideas = data.ideas;
+            this.renderIdeas();
+        } catch (error) {
+            this.showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–¥–µ–π: ' + error.message);
+        }
+    }
+
+    renderIdeas() {
+        const filteredIdeas = this.filterAndSortIdeas();
+        const ideasList = this.querySelector('#ideas-list');
+        
+        if (filteredIdeas.length === 0) {
+            ideasList.innerHTML = '<div class="no-data">–ò–¥–µ–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
+            return;
+        }
+
+        ideasList.innerHTML = filteredIdeas.map(idea => `
+            <div class="idea-item" data-id="${idea.id}">
+                <div class="idea-header">
+                    <div class="idea-title">
+                        <h4>${idea.title}</h4>
+                        <div class="idea-meta">
+                            <span class="badge category-${idea.category}">${this.getCategoryLabel(idea.category)}</span>
+                            <span class="badge priority-${idea.priority}">${this.getPriorityLabel(idea.priority)}</span>
+                            <span class="badge status-${idea.status}">${this.getStatusLabel(idea.status)}</span>
+                        </div>
+                    </div>
+                    <div class="idea-actions">
+                        <button class="btn-icon" title="–ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å">üëç ${idea.votes}</button>
+                        <button class="btn-icon" title="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏">üí¨ ${idea.comments}</button>
+                        <button class="btn-icon" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">‚úèÔ∏è</button>
+                    </div>
+                </div>
+                <div class="idea-body">
+                    <p>${idea.description}</p>
+                    <div class="idea-details">
+                        <span>‚è±Ô∏è ${idea.estimatedHours}—á</span>
+                        <span>üë§ ${idea.createdBy}</span>
+                        <span>üìÖ ${new Date(idea.createdAt).toLocaleDateString()}</span>
+                        ${idea.assignedTo ? `<span>üéØ –ù–∞–∑–Ω–∞—á–µ–Ω–æ: ${idea.assignedTo}</span>` : ''}
+                    </div>
+                    ${idea.tags && idea.tags.length > 0 ? `
+                        <div class="idea-tags">
+                            ${idea.tags.map(tag => `<span class="tag">${tag}</span>`).join('')}
+                        </div>
+                    ` : ''}
+                </div>
+            </div>
+        `).join('');
+    }
+
+    filterAndSortIdeas() {
+        let filtered = this.ideas.filter(idea => {
+            const matchesStatus = this.filters.status === 'all' || idea.status === this.filters.status;
+            const matchesPriority = this.filters.priority === 'all' || idea.priority === this.filters.priority;
+            const matchesCategory = this.filters.category === 'all' || idea.category === this.filters.category;
+            const matchesSearch = !this.filters.search || 
+                idea.title.toLowerCase().includes(this.filters.search.toLowerCase()) ||
+                idea.description.toLowerCase().includes(this.filters.search.toLowerCase());
+            
+            return matchesStatus && matchesPriority && matchesCategory && matchesSearch;
+        });
+
+        // Sort ideas
+        filtered.sort((a, b) => {
+            switch (this.sortBy) {
+                case 'created-desc':
+                    return new Date(b.createdAt) - new Date(a.createdAt);
+                case 'created-asc':
+                    return new Date(a.createdAt) - new Date(b.createdAt);
+                case 'priority-desc':
+                    return this.getPriorityValue(b.priority) - this.getPriorityValue(a.priority);
+                case 'votes-desc':
+                    return b.votes - a.votes;
+                default:
+                    return 0;
+            }
+        });
+
+        return filtered;
+    }
+
+    getPriorityValue(priority) {
+        const values = { 'critical': 4, 'high': 3, 'medium': 2, 'low': 1 };
+        return values[priority] || 0;
+    }
+
+    getCategoryLabel(category) {
+        const labels = {
+            'feature': '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª',
+            'improvement': '–£