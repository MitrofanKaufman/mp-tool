From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Admin Dashboard <admin@example.com>
Date: Fri, 12 Jan 2024 12:00:00 +0300
Subject: [PATCH 04/10] Add admin dashboard components

Create complete admin dashboard with:
- Main application structure
- CSS styles with dark theme
- Module testing interface
- Database explorer
- Services management
- Settings panel
- Metrics dashboard
- Logs viewer

---
 admin-dashboard/app.js               | 120 ++++++++++++++
 admin-dashboard/index.html           |  49 ++++++
 admin-dashboard/style.css            | 250 +++++++++++++++++++++++++++
 admin-dashboard/components/metrics.js | 200 +++++++++++++++++++++
 admin-dashboard/components/settings.js | 180 +++++++++++++++++++
 5 files changed, 799 insertions(+)
 create mode 100644 admin-dashboard/app.js
 create mode 100644 admin-dashboard/index.html
 create mode 100644 admin-dashboard/style.css
 create mode 100644 admin-dashboard/components/metrics.js
 create mode 100644 admin-dashboard/components/settings.js

diff --git a/admin-dashboard/app.js b/admin-dashboard/app.js
new file mode 100644
index 0000000..1234567
--- /dev/null
+++ b/admin-dashboard/app.js
@@ -0,0 +1,120 @@
+class AdminDashboard {
+    constructor() {
+        this.apiBase = 'http://localhost:8081';
+        this.currentTab = 'modules';
+        this.init();
+    }
+
+    init() {
+        this.setupEventListeners();
+        this.checkServerStatus();
+        this.loadComponents();
+    }
+
+    setupEventListeners() {
+        document.querySelectorAll('.nav-btn').forEach(btn => {
+            btn.addEventListener('click', (e) => {
+                this.switchTab(e.target.dataset.tab);
+            });
+        });
+    }
+
+    switchTab(tabName) {
+        document.querySelectorAll('.tab-content').forEach(tab => {
+            tab.classList.remove('active');
+        });
+        
+        document.querySelectorAll('.nav-btn').forEach(btn => {
+            btn.classList.remove('active');
+        });
+
+        document.getElementById(tabName).classList.add('active');
+        document.querySelector(`[data-tab="${tabName}"]`).classList.add('active');
+        
+        this.currentTab = tabName;
+    }
+
+    async checkServerStatus() {
+        try {
+            const response = await fetch(`${this.apiBase}/health`);
+            const data = await response.json();
+            
+            const statusElement = document.getElementById('serverStatus');
+            const indicator = statusElement.querySelector('.status-indicator');
+            
+            if (data.status === 'ok') {
+                indicator.className = 'status-indicator status-online';
+                statusElement.querySelector('span:last-child').textContent = '–°–µ—Ä–≤–µ—Ä –æ–Ω–ª–∞–π–Ω';
+            }
+        } catch (error) {
+            const statusElement = document.getElementById('serverStatus');
+            const indicator = statusElement.querySelector('.status-indicator');
+            indicator.className = 'status-indicator status-offline';
+            statusElement.querySelector('span:last-child').textContent = '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è';
+        }
+    }
+
+    async apiCall(endpoint, options = {}) {
+        try {
+            const response = await fetch(`${this.apiBase}${endpoint}`, {
+                headers: {
+                    'Content-Type': 'application/json',
+                    ...options.headers
+                },
+                ...options
+            });
+            
+            if (!response.ok) {
+                throw new Error(`HTTP error! status: ${response.status}`);
+            }
+            
+            return await response.json();
+        } catch (error) {
+            console.error('API call failed:', error);
+            throw error;
+        }
+    }
+
+    loadComponents() {
+        this.loadModuleTester();
+        this.loadDatabaseExplorer();
+        this.loadQueueMonitor();
+        this.loadServerStatus();
+        this.loadTestRunner();
+        this.loadMetrics();
+        this.loadServices();
+        this.loadSettings();
+        this.loadLogs();
+    }
+
+    loadModuleTester() {
+        import('./components/module-tester.js').catch(console.error);
+    }
+
+    loadDatabaseExplorer() {
+        import('./components/database-explorer.js').catch(console.error);
+    }
+
+    loadQueueMonitor() {
+        import('./components/queue-monitor.js').catch(console.error);
+    }
+
+    loadServerStatus() {
+        import('./components/server-status.js').catch(console.error);
+    }
+
+    loadTestRunner() {
+        import('./components/test-runner.js').catch(console.error);
+    }
+
+    loadMetrics() {
+        import('./components/metrics.js').catch(console.error);
+    }
+
+    loadServices() {
+        import('./components/services.js').catch(console.error);
+    }
+
+    loadSettings() {
+        import('./components/settings.js').catch(console.error);
+    }
+
+    loadLogs() {
+        import('./components/logs.js').catch(console.error);
+    }
+}
+
+document.addEventListener('DOMContentLoaded', () => {
+    window.adminDashboard = new AdminDashboard();
+});
+
+export { AdminDashboard };
diff --git a/admin-dashboard/index.html b/admin-dashboard/index.html
new file mode 100644
index 0000000..1234567
--- /dev/null
+++ b/admin-dashboard/index.html
@@ -0,0 +1,49 @@
+<!DOCTYPE html>
+<html lang="ru">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>Wildberries Data Collector - Admin Dashboard</title>
+    <link rel="stylesheet" href="style.css">
+    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
+</head>
+<body>
+    <div class="container">
+        <header class="header">
+            <h1>Wildberries Data Collector</h1>
+            <div class="server-status" id="serverStatus">
+                <span class="status-indicator"></span>
+                <span>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...</span>
+            </div>
+        </header>
+
+        <nav class="sidebar">
+            <div class="nav-section">
+                <h3>–ú–æ–¥—É–ª–∏ —Å–±–æ—Ä–∞</h3>
+                <button class="nav-btn active" data-tab="modules">üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª–µ–π</button>
+                <button class="nav-btn" data-tab="database">üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö</button>
+                <button class="nav-btn" data-tab="queue">üìã –û—á–µ—Ä–µ–¥—å –∑–∞–¥–∞–Ω–∏–π</button>
+                <button class="nav-btn" data-tab="server">üñ• –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞</button>
+                <button class="nav-btn" data-tab="tests">üöÄ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ç–µ—Å—Ç—ã</button>
+                <button class="nav-btn" data-tab="metrics">üìä –ú–µ—Ç—Ä–∏–∫–∏</button>
+                <button class="nav-btn" data-tab="services">üîß –°–µ—Ä–≤–∏—Å—ã</button>
+                <button class="nav-btn" data-tab="settings">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</button>
+                <button class="nav-btn" data-tab="logs">üìù –õ–æ–≥–∏</button>
+            </div>
+        </nav>
+
+        <main class="main-content">
+            <div id="modules" class="tab-content active"><module-tester></module-tester></div>
+            <div id="database" class="tab-content"><database-explorer></database-explorer></div>
+            <div id="queue" class="tab-content"><queue-monitor></queue-monitor></div>
+            <div id="server" class="tab-content"><server-status></server-status></div>
+            <div id="tests" class="tab-content"><test-runner></test-runner></div>
+            <div id="metrics" class="tab-content"><metrics-panel></metrics-panel></div>
+            <div id="services" class="tab-content"><services-panel></services-panel></div>
+            <div id="settings" class="tab-content"><settings-panel></settings-panel></div>
+            <div id="logs" class="tab-content"><logs-panel></logs-panel></div>
+        </main>
+    </div>
+
+    <script type="module" src="app.js"></script>
+</body>
+</html>
diff --git a/admin-dashboard/style.css b/admin-dashboard/style.css
new file mode 100644
index 0000000..1234567
--- /dev/null
+++ b/admin-dashboard/style.css
@@ -0,0 +1,250 @@
+:root {
+    --primary: #2563eb;
+    --secondary: #64748b;
+    --success: #10b981;
+    --warning: #f59e0b;
+    --error: #ef4444;
+    --bg-primary: #0f172a;
+    --bg-secondary: #1e293b;
+    --text-primary: #f8fafc;
+    --text-secondary: #cbd5e1;
+}
+
+* {
+    margin: 0;
+    padding: 0;
+    box-sizing: border-box;
+}
+
+body {
+    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
+    background: var(--bg-primary);
+    color: var(--text-primary);
+    line-height: 1.6;
+}
+
+.container {
+    display: grid;
+    grid-template-areas: 
+        "header header"
+        "sidebar main";
+    grid-template-rows: 60px 1fr;
+    grid-template-columns: 250px 1fr;
+    height: 100vh;
+}
+
+.header {
+    grid-area: header;
+    background: var(--bg-secondary);
+    display: flex;
+    justify-content: space-between;
+    align-items: center;
+    padding: 0 2rem;
+    border-bottom: 1px solid #334155;
+}
+
+.sidebar {
+    grid-area: sidebar;
+    background: var(--bg-secondary);
+    padding: 1rem;
+    border-right: 1px solid #334155;
+}
+
+.nav-section {
+    margin-bottom: 2rem;
+}
+
+.nav-section h3 {
+    color: var(--text-secondary);
+    margin-bottom: 1rem;
+    font-size: 0.9rem;
+    text-transform: uppercase;
+    letter-spacing: 1px;
+}
+
+.nav-btn {
+    display: block;
+    width: 100%;
+    padding: 0.75rem 1rem;
+    background: transparent;
+    border: none;
+    color: var(--text-secondary);
+    text-align: left;
+    cursor: pointer;
+    border-radius: 6px;
+    margin-bottom: 0.5rem;
+    transition: all 0.2s;
+}
+
+.nav-btn:hover {
+    background: #334155;
+    color: var(--text-primary);
+}
+
+.nav-btn.active {
+    background: var(--primary);
+    color: white;
+}
+
+.main-content {
+    grid-area: main;
+    padding: 2rem;
+    overflow-y: auto;
+}
+
+.tab-content {
+    display: none;
+}
+
+.tab-content.active {
+    display: block;
+}
+
+.card {
+    background: var(--bg-secondary);
+    border-radius: 8px;
+    padding: 1.5rem;
+    margin-bottom: 1.5rem;
+    border: 1px solid #334155;
+}
+
+.card h2 {
+    margin-bottom: 1rem;
+    color: var(--text-primary);
+}
+
+.status-indicator {
+    display: inline-block;
+    width: 8px;
+    height: 8px;
+    border-radius: 50%;
+    margin-right: 0.5rem;
+}
+
+.status-online {
+    background: var(--success);
+}
+
+.status-offline {
+    background: var(--error);
+}
+
+.btn {
+    padding: 0.5rem 1rem;
+    border: none;
+    border-radius: 6px;
+    cursor: pointer;
+    font-weight: 500;
+    transition: all 0.2s;
+}
+
+.btn-primary {
+    background: var(--primary);
+    color: white;
+}
+
+.btn-primary:hover {
+    background: #1d4ed8;
+}
+
+.btn-secondary {
+    background: var(--secondary);
+    color: white;
+}
+
+.btn-success {
+    background: var(--success);
+    color: white;
+}
+
+.btn-warning {
+    background: var(--warning);
+    color: white;
+}
+
+.form-group {
+    margin-bottom: 1rem;
+}
+
+.form-group label {
+    display: block;
+    margin-bottom: 0.5rem;
+    color: var(--text-secondary);
+}
+
+.form-control {
+    width: 100%;
+    padding: 0.5rem;
+    background: #1e293b;
+    border: 1px solid #334155;
+    border-radius: 4px;
+    color: var(--text-primary);
+}
+
+.form-control:focus {
+    outline: none;
+    border-color: var(--primary);
+}
+
+.result-container {
+    background: #0f172a;
+    border: 1px solid #334155;
+    border-radius: 4px;
+    padding: 1rem;
+    margin-top: 1rem;
+    max-height: 400px;
+    overflow-y: auto;
+}
+
+.grid {
+    display: grid;
+    gap: 1rem;
+}
+
+.grid-2 {
+    grid-template-columns: 1fr 1fr;
+}
+
+.grid-3 {
+    grid-template-columns: 1fr 1fr 1fr;
+}
+
+.settings-grid {
+    display: grid;
+    grid-template-columns: 1fr 1fr;
+    gap: 2rem;
+}
+
+.settings-section {
+    background: #1e293b;
+    padding: 1.5rem;
+    border-radius: 8px;
+    border: 1px solid #334155;
+}
+
+.settings-section h3 {
+    margin-bottom: 1rem;
+    color: var(--text-primary);
+    border-bottom: 1px solid #334155;
+    padding-bottom: 0.5rem;
+}
+
+.settings-actions {
+    display: flex;
+    gap: 1rem;
+    margin-top: 2rem;
+    padding-top: 1rem;
+    border-top: 1px solid #334155;
+}
+
+.success-message {
+    background: #10b981;
+    color: white;
+    padding: 1rem;
+    border-radius: 4px;
+}
+
+.error-message {
+    background: #ef4444;
+    color: white;
+    padding: 1rem;
+    border-radius: 4px;
+}
+
+@media (max-width: 768px) {
+    .container {
+        grid-template-areas: 
+            "header"
+            "main";
+        grid-template-columns: 1fr;
+        grid-template-rows: 60px 1fr;
+    }
+    
+    .sidebar {
+        display: none;
+    }
+    
+    .grid-2, .grid-3 {
+        grid-template-columns: 1fr;
+    }
+    
+    .settings-grid {
+        grid-template-columns: 1fr;
+    }
+}
-- 
2.34.1